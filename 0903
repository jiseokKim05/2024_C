####메모장 읽고 배열하기

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) {
    int temp;
    int A[100] = { 0, };
    int n = 0;
    FILE* fp = fopen("data.txt", "r");


    if (fp == NULL) {
        printf("파일을 열 수 없습니다.\n");
        return 1; 
    }

    do {
        if (fscanf(fp, "%d", &temp) == 1) {
            A[n] = temp;
            n++;
        }
        else break;
    } while (A[n] != EOF);

    fclose(fp);

    printf("파일의 개수: %d\n\n", n);
    printf("파일에서 읽은 값들:\n\n");
    for (int i = 0; i < n; i++) {
        printf("%d\n", A[i]);
    }
    printf("\n");

    return 0;
}
***
#### 메모장에서 읽은것들중 최댓값 최솟값

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void) {
    int temp1;
    int result;
    int min, max;
    int num = 0;
    int A[100];
    FILE* fp;
    fp = fopen("Data.txt", "r");
    if (fp == NULL)
    {
        printf("file does not exist\n\n");
        return -1;
    }
    else
    {
        do
        {
            result = fscanf(fp, "%d", &temp1);
            if (result != EOF)
            {
                A[num] = temp1;
                num++;
            }
        } while (result != EOF);

        // 최소값 초기화 (배열의 첫 번째 값으로)
        min = A[0];

        printf("\nMin 출력\n");
        for (int i = 0; i < num; i++)
        {
            if (min > A[i]) {
                min = A[i];
            }
        }
        printf("Min값: %d\n", min);

        // 최대값 초기화 (배열의 첫 번째 값으로
        max = A[0];

        printf("\nMax 출력\n");
        for (int i = 0; i < num; i++)
        {
            if (max < A[i]) {
                max = A[i];
            }
        }
        printf("Max값: %d\n", max);



    }

    fclose(fp);  // 파일을 열었으니, 닫아주기
    return 0;
}
